What happens when you initialize a repository? Why do you need to do it?

   A new folder is created to save all the history there.
   I need to do it because otherwise, there won't be a directory
   for the versions to be saved.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

   Working directory: it does not have all the same files, only the
   ones you want to be able to commit.
   Repository: it has the commited files, the different versions
   that have been saved.
   I think it allows people to choose the files they want to commit
   even if the directory has more.

How can you use the staging area to make sure you have one commit per logical
change?

   By comparing it to the last file that was commited.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

   When you want to modify some things to create several versions of one proyect.
   They help by letting you save the changes only in one branch and keeping the
   other without them.

How do the diagrams help you visualize the branch structure?

  They help by making you see which commits you can see when you use git log
  in each branch, and also by making you realize if you need to create a new
  branch or not.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

  Merging helps to have all the changes you have made in two branches together
  in one. It is represented like that, because the commits that both branches
  have will be shown if you use git log (both are its parents).

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

  Pros: you do not have to compare both files to add what is missing in one
  to the other.
  Cons: you might have problems, so you need to compare the parts that cause
  the conflict(s).
